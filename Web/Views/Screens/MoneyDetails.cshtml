@model Web.Models.Screens.MoneyDetailsVM
@using System.Globalization
@using Forloop.HtmlHelpers

<!-- different content -->
<div class="col-md-12 col-sm-12 col-xs-12 different-content">
	<div class="table-responsive div-table-money col-md-12 col-sm-12 col-xs-12">
		<table class="table detail-table">
			<thead>
			<tr>
				<th>Mệnh giá</th>
				<th>Số tờ</th>
				<th>Ghi chú</th>
				<th>Mệnh giá</th>
				<th>Số tờ</th>
				<th>Ghi chú</th>
			</tr>
			</thead>
			<tbody>
			@for (int i = 0; i < Model.Data.Denominations.Count; i+=2)
			{
				<tr>
					@Html.HiddenFor(s => Model.Data.Denominations[i].Value)
					<td class="txt-bold cost">@Model.Data.Denominations[i].Value.ToString("N0", new CultureInfo("vi-VN", false)) VND</td>
					<td class="number">
						@Html.TextBoxFor(s => Model.Data.Denominations[i].NumberOfUnit, new { @class = "input-number form-control", type = "text" })
						@*<input type="text" class="form-control">*@
					</td>
					<td class="noti">
						@Html.TextBoxFor(s => Model.Data.Denominations[i].Note, new { @class = "form-control" })
						@*<input type="text" class="form-control">*@
					</td>
					
					@Html.HiddenFor(s => Model.Data.Denominations[i + 1].Value)
					<td class="txt-bold cost">@Model.Data.Denominations[i + 1].Value.ToString("N0", new CultureInfo("vi-VN", false)) VND</td>
					<td class="number">
						@Html.TextBoxFor(s => Model.Data.Denominations[i + 1].NumberOfUnit, new { @class = "input-number form-control", type = "text" })
						@*<input type="text" class="form-control">*@
					</td>
					<td class="noti">
						@Html.TextBoxFor(s => Model.Data.Denominations[i + 1].Note, new { @class = "form-control" })
						@*<input type="text" class="form-control">*@
					</td>
				</tr>	
			}
			
			</tbody>
		</table>
	</div>

	<div class="form-group number-money col-md-6 col-sm-6 col-xs-12 pull-right">
		@*<label>Số tiền:</label>
		<input type="text" class="form-control">*@
		@Html.LabelFor(model => model.Data.Amount)
		@Html.TextBoxFor(s => s.Data.Amount, new { @class = "form-control", autofocus = "autofocus" })
		@Html.ValidationMessageFor(model => model.Data.Amount, "", new { @class = "text-danger" })
	</div>
</div> <!-- end div different content -->

@using (Html.BeginScriptContext())
{
    //Html.AddScriptFile("~/scripts/kendo/kendo.core.min.js");
    //Html.AddScriptFile("~/scripts/kendo/kendo.userevents.min.js");
    //Html.AddScriptFile("~/scripts/kendo/kendo.numerictextbox.min.js");
    //Html.AddScriptFile("~/scripts/kendo/cultures/kendo.culture.vi-VN.min.js");

	Html.AddScriptBlock(
		@<script>
            $(function () {
 				var anElement = new AutoNumeric('#Data_Amount',
 					{
 						decimalCharacter: ',',
 						digitGroupSeparator: '.',
 						decimalPlaces: 0
 					});
 				var elements = AutoNumeric.multiple('.input-number',
                    {
                        decimalCharacter: ',',
                        digitGroupSeparator: '.',
                        decimalPlaces: 0
                    });
 			});
 		</script>
		);
}


@*<div class="form-group">
	@Html.LabelFor(model => model.Data.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
	<div class="col-md-10">
		@Html.TextBoxFor(s => s.Data.Amount, new { @class = "form-control", autofocus = "autofocus", style = "width: 100%" })
		@Html.ValidationMessageFor(model => model.Data.Amount, "", new {@class = "text-danger"})
	</div>
</div>

<table class="table">
	<thead>
	<tr>
		<th>Mệnh giá</th>
		<th>Số tờ</th>
		<th>Ghi chú</th>
	</tr>
	</thead>
	<tbody>
	@for (int i = 0; i < Model.Data.Denominations.Count; i++)
	{
		<tr>
			<td>
				@Html.HiddenFor(s => Model.Data.Denominations[i].Value)
				Mệnh giá @Model.Data.Denominations[i].Value
			</td>
			<td>@Html.TextBoxFor(s => Model.Data.Denominations[i].NumberOfUnit, new {@class = "input-number"})</td>
			<td>@Html.TextBoxFor(s => Model.Data.Denominations[i].Note, new {@class = "form-control"})</td>
		</tr>
	}
	</tbody>
</table>

@using (Html.BeginScriptContext())
{
	Html.AddScriptFile("~/scripts/kendo/kendo.core.min.js");
	Html.AddScriptFile("~/scripts/kendo/kendo.userevents.min.js");
	Html.AddScriptFile("~/scripts/kendo/kendo.numerictextbox.min.js");
	Html.AddScriptFile("~/scripts/kendo/cultures/kendo.culture.vi-VN.min.js");

	Html.AddScriptBlock(
		@<script>
			$(function () {
				var anElement = new AutoNumeric('#Data_Amount',
					{
						decimalCharacter: ',',
						digitGroupSeparator: '.',
						decimalPlaces: 0
					});
				$(".input-number").kendoNumericTextBox();
			});
 		</script>
	);
}*@